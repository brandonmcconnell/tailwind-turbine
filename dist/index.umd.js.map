{"version":3,"file":"index.umd.js","sources":["../index.ts"],"sourcesContent":["import type { Config } from 'tailwindcss';\nimport type { ResolvableTo } from 'tailwindcss/types/config.d.ts';\nimport tailwindPlugin from 'tailwindcss/plugin.js';\n\ntype PossiblyInvoked<T extends (...args: any[]) => any> = T | ReturnType<T>;\n\n// Plugin Types\ntype TailwindPluginBase = typeof tailwindPlugin;\ntype TailwindPlugin = ReturnType<TailwindPluginBase> | PossiblyInvoked<ReturnType<TailwindPluginBase['withOptions']>>;\ntype TurbinePluginBase = {\n  transform?: (config: NormalizedConfig) => NormalizedConfig;\n  plugins?: TailwindPlugin[];\n};\nexport type TurbinePlugin = TurbinePluginBase | ((...params: any[]) => TurbinePluginBase);\ntype Plugin = TurbinePlugin | TailwindPlugin;\n\n// Tailwind Plugin Type Guard\nfunction hasTailwindHandler(plugin: Plugin) {\n  return 'handler' in plugin && typeof plugin.handler === 'function';\n}\nfunction isTailwindPlugin(plugin: Plugin): plugin is TailwindPlugin {\n  const p = typeof plugin === 'function' ? plugin({}) : plugin;\n  return hasTailwindHandler(p);\n}\n\n// Turbine Plugin Type Guard\nfunction hasTurbineTransform(plugin: Plugin) {\n  return 'transform' in plugin && typeof plugin.transform === 'function';\n}\nfunction hasTurbinePlugins(plugin: Plugin) {\n  return 'plugins' in plugin && Array.isArray(plugin.plugins) && plugin.plugins.every(isTailwindPlugin);\n}\nfunction isTurbinePlugin(plugin: Plugin): plugin is TurbinePlugin {\n  const p = typeof plugin === 'function' ? plugin({}) : plugin;\n  return hasTurbineTransform(p) || hasTurbinePlugins(p);\n}\n\ntype NonNullableTheme = NonNullable<Config['theme']>;\ninterface NormalizedTheme extends NonNullableTheme {\n  // Responsiveness\n  supports: NonNullable<NonNullableTheme['supports']>;\n  data: NonNullable<NonNullableTheme['data']>;\n  // Reusable base configs\n  colors: NonNullable<NonNullableTheme['colors']>;\n  spacing: NonNullable<NonNullableTheme['spacing']>;\n  // Components\n  container: NonNullable<NonNullableTheme['container']>;\n}\n\ninterface NormalizedConfig extends Config {\n  safelist: NonNullable<Config['safelist']>;\n  blocklist: NonNullable<Config['blocklist']>;\n  presets: NonNullable<Config['presets']>;\n  theme: NormalizedTheme;\n  plugins: NonNullable<Config['plugins']>;\n}\n\nconst createNormalizedThemeObject = (): NormalizedTheme => ({\n  supports: {},\n  data: {},\n  colors: {},\n  spacing: {},\n  container: {},\n});\n\nconst normalizeConfig = (config: Config): NormalizedConfig => {\n  config.safelist ??= [] satisfies NormalizedConfig['safelist'];\n  config.blocklist ??= [] satisfies NormalizedConfig['blocklist'];\n  config.presets ??= [] satisfies NormalizedConfig['presets'];\n  config.theme = {\n    ...createNormalizedThemeObject(),\n    ...(config.theme ?? {}),\n    extend: {\n      ...createNormalizedThemeObject(),\n      ...(config.theme?.extend ?? {}),\n    },\n  } satisfies NormalizedTheme & { extend: NormalizedTheme };\n  config.theme.extend ??= {} satisfies NormalizedConfig['theme']['extend'];\n  config.plugins ??= [] satisfies NormalizedConfig['plugins'];\n  return config as NormalizedConfig;\n};\n\n// Turbine Plugin Builder\nexport const build = ({\n  config: CONFIG_RAW,\n  plugins,\n  // reporting, // Coming soon ðŸ‘€\n}: {\n  config: Config;\n  plugins: Plugin[];\n  // reporting?: boolean;\n}) => {\n  let i = 0;\n  let config = normalizeConfig(CONFIG_RAW);\n  for (const plugin of plugins) {\n    if (isTailwindPlugin(plugin)) {\n      config.plugins.push(plugin);\n    } else if (isTurbinePlugin(plugin)) {\n      const { transform, plugins } = typeof plugin === 'function' ? plugin() : plugin;\n      if (transform) {\n        config = transform(config);\n      }\n      if (plugins) {\n        config.plugins.push(...plugins);\n      }\n    } else {\n      throw new Error(`Invalid Turbine plugin at position ${i}, did not match Tailwind CSS or Turbine plugin.`);\n    }\n    i++;\n  }\n  return config as NormalizedConfig;\n};\n\ntype ResolvableToFn<T> = Extract<ResolvableTo<T>, (...args: any[]) => any>;\ntype ResolvableToParameters<T> = Parameters<ResolvableToFn<T>>;\ntype PluginUtils<T> = ResolvableToParameters<T>[0];\n\nexport const resolve = <T, U>(value: ResolvableTo<T>, callback: (resolvedValue: T) => U) =>\n  typeof value === 'function'\n    ? (utils: PluginUtils<T>) => callback((value as ResolvableToFn<T>)(utils))\n    : callback(value);\n\nconst Turbine = {\n  build,\n  resolve,\n};\n\nexport default Turbine;\n"],"names":["isTailwindPlugin","plugin","handler","hasTailwindHandler","isTurbinePlugin","p","transform","hasTurbineTransform","Array","isArray","plugins","every","hasTurbinePlugins","build","_ref","_step","i","config","_config$safelist","_config$theme","_config$theme$extend","_config$theme2","_config$theme3","safelist","blocklist","_config$presets","presets","theme","_extends","supports","data","colors","spacing","container","extend","_config$plugins","normalizeConfig","_iterator","_createForOfIteratorHelperLoose","done","value","push","Error","_config$plugins2","_ref2","apply","resolve","callback","utils","Turbine"],"mappings":"ujBAoBA,SAASA,EAAiBC,GAExB,OALF,SAA4BA,GAC1B,MAAO,YAAaA,GAAoC,mBAAnBA,EAAOC,OAC9C,CAGSC,CADqB,mBAAXF,EAAwBA,EAAO,CAAA,GAAMA,EAExD,CASA,SAASG,EAAgBH,GACvB,IAAMI,EAAsB,mBAAXJ,EAAwBA,EAAO,CAAE,GAAIA,EACtD,OARF,SAA6BA,GAC3B,MAAO,cAAeA,GAAsC,mBAArBA,EAAOK,SAChD,CAMSC,CAAoBF,IAL7B,SAA2BJ,GACzB,MAAO,YAAaA,GAAUO,MAAMC,QAAQR,EAAOS,UAAYT,EAAOS,QAAQC,MAAMX,EACtF,CAGmCY,CAAkBP,EACrD,CAsBA,IA0BaQ,EAAQ,SAAHC,GAWhB,IAVQ,IAUoBC,EAT5BL,EAAOI,EAAPJ,QAOIM,EAAI,EACJC,EA5BkB,SAACA,GAAoCC,IAAAC,EAAAC,EAAAC,EAAAC,EAc3D,OAbe,MAAfL,EAAOM,WAAPN,EAAOM,SAAa,IACJ,MAAhBN,EAAOO,YAAPP,EAAOO,UAAc,IACPC,MAAdR,EAAOS,UAAPT,EAAOS,QAAY,IACnBT,EAAOU,MAAKC,EAAA,CAAA,EAZ8C,CAC1DC,SAAU,CAAE,EACZC,KAAM,CAAE,EACRC,OAAQ,CAAE,EACVC,QAAS,CAAE,EACXC,UAAW,WAQuBd,EAC5BF,EAAOU,OAAKR,EAAI,CAAE,EACtBe,CAAAA,OAAMN,KAfkD,CAC1DC,SAAU,CAAE,EACZC,KAAM,CAAE,EACRC,OAAQ,CAAE,EACVC,QAAS,CAAE,EACXC,UAAW,IAYiB,OADQb,EAChB,OADgBC,EAC5BJ,EAAOU,YAAK,EAAZN,EAAca,QAAMd,EAAI,CAAE,KAGf,OAAnBE,EAAAL,EAAOU,OAAMO,SAAbZ,EAAaY,OAAW,CAAgD,GAC1DC,MAAdlB,EAAOP,UAAPO,EAAOP,QAAY,IACZO,CACT,CAaemB,CATKtB,EAAlBG,QAUAoB,2qBAAAC,CAAqB5B,KAAOK,EAAAsB,KAAAE,MAAE,CAAnB,IAAAtC,EAAMc,EAAAyB,MACf,GAAIxC,EAAiBC,GACnBgB,EAAOP,QAAQ+B,KAAKxC,OACXG,KAAAA,EAAgBH,GASzB,MAAM,IAAIyC,MAA4C1B,sCAAAA,EAAkD,mDARxG,IAIa2B,EAJbC,EAAiD,mBAAX3C,EAAwBA,IAAWA,EAAjEK,EAASsC,EAATtC,UAAWI,EAAOkC,EAAPlC,QACfJ,IACFW,EAASX,EAAUW,IAEjBP,IACFiC,EAAA1B,EAAOP,SAAQ+B,KAAII,MAAAF,EAAIjC,EAI3B,CACAM,GACF,CACA,OAAOC,CACT,EAMa6B,EAAU,SAAON,EAAwBO,GAAiC,MACpE,mBAAVP,EACH,SAACQ,GAAqB,OAAKD,EAAUP,EAA4BQ,GAAO,EACxED,EAASP,EAAM,EAEfS,EAAU,CACdpC,MAAAA,EACAiC,QAAAA"}