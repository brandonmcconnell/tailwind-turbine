{"version":3,"file":"index.cjs","sources":["../index.ts"],"sourcesContent":["import type { Config } from 'tailwindcss';\nimport type { ResolvableTo } from 'tailwindcss/types/config.d.ts';\nimport tailwindPlugin from 'tailwindcss/plugin.js';\n\ntype PossiblyInvoked<T extends (...args: any[]) => any> = T | ReturnType<T>;\n\n// Plugin Types\ntype TailwindPluginBase = typeof tailwindPlugin;\ntype TailwindPlugin = ReturnType<TailwindPluginBase> | PossiblyInvoked<ReturnType<TailwindPluginBase['withOptions']>>;\ntype TurbinePluginBase = {\n  transform?: (config: NormalizedConfig) => NormalizedConfig;\n  plugins?: TailwindPlugin[];\n};\nexport type TurbinePlugin = TurbinePluginBase | ((...params: any[]) => TurbinePluginBase);\ntype Plugin = TurbinePlugin | TailwindPlugin;\n\n// Tailwind Plugin Type Guard\nfunction hasTailwindHandler(plugin: Plugin) {\n  return 'handler' in plugin && typeof plugin.handler === 'function';\n}\nfunction isTailwindPlugin(plugin: Plugin): plugin is TailwindPlugin {\n  const p = typeof plugin === 'function' ? plugin({}) : plugin;\n  return hasTailwindHandler(p);\n}\n\n// Turbine Plugin Type Guard\nfunction hasTurbineTransform(plugin: Plugin) {\n  return 'transform' in plugin && typeof plugin.transform === 'function';\n}\nfunction hasTurbinePlugins(plugin: Plugin) {\n  return 'plugins' in plugin && Array.isArray(plugin.plugins) && plugin.plugins.every(isTailwindPlugin);\n}\nfunction isTurbinePlugin(plugin: Plugin): plugin is TurbinePlugin {\n  const p = typeof plugin === 'function' ? plugin({}) : plugin;\n  return hasTurbineTransform(p) || hasTurbinePlugins(p);\n}\n\ntype NonNullableTheme = NonNullable<Config['theme']>;\ninterface NormalizedTheme extends NonNullableTheme {\n  // Responsiveness\n  supports: NonNullable<NonNullableTheme['supports']>;\n  data: NonNullable<NonNullableTheme['data']>;\n  // Reusable base configs\n  colors: NonNullable<NonNullableTheme['colors']>;\n  spacing: NonNullable<NonNullableTheme['spacing']>;\n  // Components\n  container: NonNullable<NonNullableTheme['container']>;\n}\n\ninterface NormalizedConfig extends Config {\n  content: NonNullable<Config['content']>;\n  safelist: NonNullable<Config['safelist']>;\n  blocklist: NonNullable<Config['blocklist']>;\n  presets: NonNullable<Config['presets']>;\n  theme: NormalizedTheme;\n  plugins: NonNullable<Config['plugins']>;\n}\n\nconst createNormalizedThemeObject = (): NormalizedTheme => ({\n  supports: {},\n  data: {},\n  colors: {},\n  spacing: {},\n  container: {},\n});\n\nconst normalizeConfig = (config: Partial<Config> | undefined = {}): NormalizedConfig => {\n  if (\n    !config.content ||\n    (Array.isArray(config.content) && config.content.length === 0) ||\n    (!Array.isArray(config.content) && config.content.files.length === 0)\n  ) {\n    console.warn(\n      'No `content` property found in `config.content`. This may yield unexpected results, as your project files may not be scanned by Tailwind CSS.'\n    );\n  }\n  config.content = {\n    files: Array.isArray(config.content) ? config.content : [],\n    ...(config.content && !Array.isArray(config.content) ? config.content : {}),\n  } satisfies NormalizedConfig['content'];\n  config.safelist ??= [] satisfies NormalizedConfig['safelist'];\n  config.blocklist ??= [] satisfies NormalizedConfig['blocklist'];\n  config.presets ??= [] satisfies NormalizedConfig['presets'];\n  config.theme = {\n    ...createNormalizedThemeObject(),\n    ...(config.theme ?? {}),\n    extend: {\n      ...createNormalizedThemeObject(),\n      ...(config.theme?.extend ?? {}),\n    },\n  } satisfies NormalizedTheme & { extend: NormalizedTheme };\n  config.theme.extend ??= {} satisfies NormalizedConfig['theme']['extend'];\n  config.plugins ??= [] satisfies NormalizedConfig['plugins'];\n  return config as NormalizedConfig;\n};\n\n// Turbine Plugin Builder\nexport const build = ({\n  config: CONFIG_RAW,\n  plugins,\n  // reporting, // Coming soon ðŸ‘€\n}: {\n  config: Partial<Config>;\n  plugins: Plugin[];\n  // reporting?: boolean;\n}) => {\n  let i = 0;\n  let config = normalizeConfig(CONFIG_RAW);\n  for (const plugin of plugins) {\n    if (isTailwindPlugin(plugin)) {\n      config.plugins.push(plugin);\n    } else if (isTurbinePlugin(plugin)) {\n      const { transform, plugins } = typeof plugin === 'function' ? plugin() : plugin;\n      if (transform) {\n        config = transform(config);\n      }\n      if (plugins) {\n        config.plugins.push(...plugins);\n      }\n    } else {\n      throw new Error(`Invalid Turbine plugin at position ${i}, did not match Tailwind CSS or Turbine plugin.`);\n    }\n    i++;\n  }\n  return config as NormalizedConfig;\n};\n\ntype ResolvableToFn<T> = Extract<ResolvableTo<T>, (...args: any[]) => any>;\ntype ResolvableToParameters<T> = Parameters<ResolvableToFn<T>>;\ntype PluginUtils<T> = ResolvableToParameters<T>[0];\n\nexport const resolve = <T, U>(value: ResolvableTo<T>, callback: (resolvedValue: T) => U) =>\n  typeof value === 'function'\n    ? (utils: PluginUtils<T>) => callback((value as ResolvableToFn<T>)(utils))\n    : callback(value);\n"],"names":["isTailwindPlugin","plugin","handler","hasTailwindHandler","isTurbinePlugin","p","transform","hasTurbineTransform","Array","isArray","plugins","every","hasTurbinePlugins","_ref","_step","i","config","_config","_config2","_config3","_config$theme","_config$theme$extend","_config$theme2","_config$theme3","_config4","content","length","files","console","warn","_extends","safelist","_config2$blocklist","blocklist","_config3$presets","presets","theme","createNormalizedThemeObject","supports","data","colors","spacing","container","extend","normalizeConfig","_iterator","_createForOfIteratorHelperLoose","done","value","push","Error","_config$plugins","_ref2","apply","callback","utils"],"mappings":"8UAoBA,SAASA,EAAiBC,GAExB,OALF,SAA4BA,GAC1B,MAAO,YAAaA,GAAoC,mBAAnBA,EAAOC,OAC9C,CAGSC,CADqB,mBAAXF,EAAwBA,EAAO,IAAMA,EAExD,CASA,SAASG,EAAgBH,GACvB,IAAMI,EAAsB,mBAAXJ,EAAwBA,EAAO,CAAE,GAAIA,EACtD,OARF,SAA6BA,GAC3B,MAAO,cAAeA,GAAsC,mBAArBA,EAAOK,SAChD,CAMSC,CAAoBF,IAL7B,SAA2BJ,GACzB,MAAO,YAAaA,GAAUO,MAAMC,QAAQR,EAAOS,UAAYT,EAAOS,QAAQC,MAAMX,EACtF,CAGmCY,CAAkBP,EACrD,eA8DqB,SAAHQ,GAWhB,IAVQ,IAUoBC,EAT5BJ,EAAOG,EAAPH,QAOIK,EAAI,EACJC,EAzCkB,SAACA,GAA8D,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EA2BrF,YA3B6D,IAAtCR,IAAAA,EAAsC,CAAE,KAE5DA,EAAOS,SACPjB,MAAMC,QAAQO,EAAOS,UAAsC,IAA1BT,EAAOS,QAAQC,SAC/ClB,MAAMC,QAAQO,EAAOS,UAA4C,IAAhCT,EAAOS,QAAQE,MAAMD,SAExDE,QAAQC,KACN,iJAGJb,EAAOS,QAAOK,EAAA,CACZH,MAAOnB,MAAMC,QAAQO,EAAOS,SAAWT,EAAOS,QAAU,IACpDT,EAAOS,UAAYjB,MAAMC,QAAQO,EAAOS,SAAWT,EAAOS,QAAU,CAAA,GAE3D,OAAfR,EAAAD,GAAOe,WAAPd,EAAOc,SAAa,IACJC,OAAhBd,EAAAF,GAAOiB,YAAPf,EAAOe,UAAc,IACPC,OAAdf,EAAAH,GAAOmB,UAAPhB,EAAOgB,QAAY,IACnBnB,EAAOoB,MAAKN,EACPO,CAAAA,EA1BqD,CAC1DC,SAAU,CAAA,EACVC,KAAM,GACNC,OAAQ,CAAE,EACVC,QAAS,GACTC,UAAW,CAAA,GAsBOtB,OADgBA,EAC5BJ,EAAOoB,OAAKhB,EAAI,CAAA,GACpBuB,OAAMb,EAAA,CAAA,EA5BkD,CAC1DQ,SAAU,CAAA,EACVC,KAAM,GACNC,OAAQ,CAAE,EACVC,QAAS,GACTC,UAAW,CAAA,GAyBiB,OADQrB,EAC5BC,OAD4BA,EAC5BN,EAAOoB,YAAPd,EAAAA,EAAcqB,QAAMtB,EAAI,CAAA,KAGb,OAAnBE,EAAAP,EAAOoB,OAAMO,SAAbpB,EAAaoB,OAAW,CAAgD,UACxEnB,EAAAR,GAAON,UAAPc,EAAOd,QAAY,IACZM,CACT,CAae4B,CATK/B,EAAlBG,QAUA6B,2qBAAAC,CAAqBpC,KAAOI,EAAA+B,KAAAE,MAAE,CAAnB,IAAA9C,EAAMa,EAAAkC,MACf,GAAIhD,EAAiBC,GACnBe,EAAON,QAAQuC,KAAKhD,YACXG,EAAgBH,GASzB,MAAM,IAAIiD,MAAK,sCAAuCnC,EAAkD,mDARxG,IAIaoC,EAJbC,EAAiD,mBAAXnD,EAAwBA,IAAWA,EAAjEK,EAAS8C,EAAT9C,UAAWI,EAAO0C,EAAP1C,QACfJ,IACFU,EAASV,EAAUU,IAEjBN,IACFyC,EAAAnC,EAAON,SAAQuC,KAAII,MAAAF,EAAIzC,EAI3B,CACAK,GACF,CACA,OAAOC,CACT,kBAMuB,SAAOgC,EAAwBM,SACnC,mBAAVN,EACH,SAACO,GAAqB,OAAKD,EAAUN,EAA4BO,GAAO,EACxED,EAASN,EAAM"}