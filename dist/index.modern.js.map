{"version":3,"file":"index.modern.js","sources":["../index.ts"],"sourcesContent":["import type { Config } from 'tailwindcss';\nimport tailwindPlugin from 'tailwindcss/plugin.js';\n\n// Plugin Types\ntype TailwindPluginBase = typeof tailwindPlugin;\ntype TailwindPlugin = ReturnType<TailwindPluginBase | TailwindPluginBase['withOptions']>;\ntype TurbinePluginBase = {\n  transform?: (config: Partial<Config>) => Partial<Config>;\n  plugins?: TailwindPlugin[];\n};\nexport type TurbinePlugin = TurbinePluginBase | (<T = any>(...params: T[]) => TurbinePluginBase);\ntype Plugin = TurbinePlugin | TailwindPlugin;\n\n// Tailwind Plugin Type Guard\nfunction hasTailwindHandler(plugin: Plugin) {\n  return 'handler' in plugin && typeof plugin.handler === 'function';\n}\nfunction isTailwindPlugin(plugin: Plugin): plugin is TailwindPlugin {\n  if (hasTailwindHandler(plugin)) return true;\n  if (typeof plugin === 'function' && hasTailwindHandler(plugin({}))) return true;\n  return false;\n}\n\n// Turbine Plugin Type Guard\nfunction hasTurbineTransform(plugin: Plugin) {\n  return 'transform' in plugin && typeof plugin.transform === 'function';\n}\nfunction isTurbinePlugin(plugin: Plugin): plugin is TurbinePlugin {\n  if (hasTurbineTransform(plugin)) return true;\n  if (typeof plugin === 'function' && hasTurbineTransform(plugin({}))) return true;\n  return false;\n}\n\n// Turbine Plugin Builder\nconst Turbine = {\n  build({ config, plugins }: { config: Partial<Config>; plugins: Plugin[] }) {\n    let i = 0;\n    for (const plugin of plugins) {\n      if (isTailwindPlugin(plugin)) {\n        config.plugins ??= [];\n        config.plugins.push(plugin);\n      } else if (isTurbinePlugin(plugin)) {\n        const { transform, plugins } = typeof plugin === 'function' ? plugin() : plugin;\n        if (transform) {\n          config = transform(config);\n        }\n        if (plugins) {\n          config.plugins ??= [];\n          config.plugins.push(...plugins);\n        }\n      } else {\n        throw new Error(`Invalid Turbine plugin at position ${i}, did not match Tailwind CSS or Turbine plugin.`);\n      }\n      i++;\n    }\n    return config as Config;\n  },\n};\n\nexport default Turbine;\n"],"names":["hasTailwindHandler","plugin","handler","isTailwindPlugin","hasTurbineTransform","transform","isTurbinePlugin","Turbine","build","config","plugins","i","_config","_config$plugins","push","Error","_config2","_config2$plugins"],"mappings":"AAcA,SAASA,EAAmBC,GAC1B,MAAO,YAAaA,GAAoC,mBAAnBA,EAAOC,OAC9C,CACA,SAASC,EAAiBF,GACxB,QAAID,EAAmBC,MACD,mBAAXA,IAAyBD,EAAmBC,EAAO,CAAE,IAElE,CAGA,SAASG,EAAoBH,GAC3B,MAAO,cAAeA,GAAsC,mBAArBA,EAAOI,SAChD,CACA,SAASC,EAAgBL,GACvB,QAAIG,EAAoBH,MACF,mBAAXA,IAAyBG,EAAoBH,EAAO,CAAE,IAEnE,CAGM,MAAAM,EAAU,CACdC,KAAAA,EAAMC,OAAEA,EAAMC,QAAEA,IACd,IAAIC,EAAI,EACR,IAAK,MAAMV,KAAUS,EAAS,CAC5B,GAAIP,EAAiBF,GAAS,CAAA,IAAAW,EACdC,OAAdD,EAAAH,GAAOC,UAAPE,EAAOF,QAAY,IACnBD,EAAOC,QAAQI,KAAKb,EACtB,KAAO,KAAIK,EAAgBL,GAUzB,MAAM,IAAIc,4CAA4CJ,oDAVpB,CAClC,MAAMN,UAAEA,EAAWK,QAAAA,GAA8B,mBAAXT,EAAwBA,IAAWA,EAI5D,IAAAe,EAHTX,IACFI,EAASJ,EAAUI,IAEjBC,IACYO,OAAdD,EAAAP,GAAOC,UAAPM,EAAON,QAAY,IACnBD,EAAOC,QAAQI,QAAQJ,GAE3B,CAEA,CACAC,GACF,CACA,OAAOF,CACT"}